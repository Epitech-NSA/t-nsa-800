import express from 'express';
import cors from 'cors';
import helmet from 'helmet';
import 'reflect-metadata';
import swaggerJSDoc from 'swagger-jsdoc';
import swaggerStats from 'swagger-stats';
import swaggerUi from 'swagger-ui-express';
import routes from './routes';
import {AppDataSource} from './config/data-source';
import {loggerMiddelware} from "./middlewares/loggerMiddelware";
import {winstonLogger} from "./logger";

const startServer = async () => {
  try {
    await AppDataSource.initialize();
    winstonLogger.info('Database connected successfully')
    const app = express();

    // Middleware
    app.use(cors()); // Enable Cross-Origin Request Sharing
    app.use(helmet()); // Secure HTTP headers
    app.use(express.json()); // Parse JSON bodies
    app.use(express.urlencoded({extended: true})); // Parse URL-encoded bodies

    // Logger Middelware
    app.use(loggerMiddelware)

    // Use swagger-stats for API metrics
    app.use(swaggerStats.getMiddleware({}));

    // Set all routes from the routes folder
    app.use('/', routes);

    // Set up Swagger API docs
    const options = {
      swaggerDefinition: {
        info: {
          title: 'Test API',
          version: '1.0.0',
          description: 'Test Express API with autogenerated swagger doc',
        },
      },
      apis: ['**/routes/auth.ts', '**/controller/Admin/*.ts'],
    };
    const specs = swaggerJSDoc(options);
    app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));

    // Start the server
    app.listen(3000, () => {
      winstonLogger.info('Server started on port 3000!')

    });
  } catch (error) {
    winstonLogger.error('Database connection error:', error);
  }
};

startServer();
